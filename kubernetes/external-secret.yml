apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  # The name of the Kubernetes Secret that will be created.
  # This should match the secretName in your Ingress resource.
  name: luis122448-dev-aws-tls
  namespace: smart-shell-production
spec:
  # The SecretStore to use. We will create this in the setup guide.
  secretStoreRef:
    name: aws-cluster-secret-store
    kind: ClusterSecretStore

  # This is the name of the Kubernetes Secret that will be created.
  # It should match the 'name' in the metadata section.
  target:
    name: luis122448-dev-aws-tls
    # This ensures the Secret is of the correct type for Ingress controllers.
    creationPolicy: Owner
    template:
      type: kubernetes.io/tls

  # This section defines which secret to fetch from AWS Secrets Manager
  # and how to map its keys to the Kubernetes Secret.
  data:
  - secretKey: tls.key # The key in the resulting k8s Secret (standard for TLS secrets)
    remoteRef:
      key: prod/tls/luis122448.dev # The name of your secret in AWS Secrets Manager
      property: privkey      # The key within the JSON of your AWS secret

  - secretKey: tls.crt # The key in the resulting k8s Secret (standard for TLS secrets)
    remoteRef:
      key: prod/tls/luis122448.dev # The name of your secret in AWS Secrets Manager
      property: fullchain       # The key within the JSON of your AWS secret
