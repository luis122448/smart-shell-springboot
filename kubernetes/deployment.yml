apiVersion: apps/v1
kind: Deployment
metadata:
  name: springboot-deployment
  namespace: smart-shell-test
spec:
  replicas: 3
  selector:
    matchLabels:
      app: springboot
  template:
    metadata:
      labels:
        app: springboot
    spec:
      containers:
      - name: springboot
        image: luis122448/smart-shell-springboot:latest
        ports:
        - containerPort: 8080
        env:
        - name: CORS_ALLOWED_ORIGINS
          value: "http://smart-shell.luis122448.com,https://smart-shell.luis122448.com"
        - name: POSTGRES_HOST
          value: "postgres-service.smart-shell-test.svc.cluster.local"
        - name: POSTGRES_PORT
          value: "5432"
        - name: POSTGRES_DATABASE
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_DB
        - name: POSTGRES_USERNAME
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_PASSWORD
        - name: MONGO_HOST
          value: "mongo-service.smart-shell-test.svc.cluster.local"
        - name: MONGO_PORT
          value: "27017"
        - name: MONGO_DATABASE
          valueFrom:
            secretKeyRef:
              name: mongo-secret
              key: MONGO_INITDB_DATABASE
        - name: MONGO_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongo-secret
              key: MONGO_INITDB_ROOT_USERNAME
        - name: MONGO_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongo-secret
              key: MONGO_INITDB_ROOT_PASSWORD
        - name: REDIS_HOST
          value: "redis-service.smart-shell-test.svc.cluster.local"
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_USERNAME
          value: "default"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: REDIS_PASSWORD
        resources:
          requests:
            cpu: "250m"
            memory: "512Mi"
          limits:
            cpu: "1000m"
            memory: "2Gi"
        livenessProbe:
          httpGet:
            path: /app-project/actuator/health/liveness
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /app-project/actuator/health/readiness
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
